{
  "hash": "48abd39ebef8aac806c85d585110f3e7",
  "result": {
    "markdown": "---\ntitle  : Convert list of array/matrix into an array in R\nslug   : convert-list-of-array-matrix-into-an-array-in-r\nauthor : therimalaya\ndate   : 2022-03-18\ndate-modified: 2024-10-09\ndraft: true\ncategories:\n  - R\ntags:\n  - rstat\n  - programming\n---\n\n\n\n\nArray and matrix/tables are data structures in R with same data types such as numeric, string or boolean. This examples show how to convert a list of vector/matrix/array into a multi-dimentional array so that it will become easier to aggregate them in particular dimension. We can also do this converting everything into data frame but this way can be useful sometimes and is worth learning.\n\nLet us use a dataset already available in R and convert that into a list of tables or matrix. Here I will use `Titanic` dataset and convert it into a nested list of array using `purrr` package.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nlibrary(purrr)\ntitanic_list <- array_tree(Titanic, 4:3)\nstr(titanic_list)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nList of 2\n $ No :List of 2\n  ..$ Child: num [1:4, 1:2] 0 0 35 0 0 0 17 0\n  .. ..- attr(*, \"dimnames\")=List of 2\n  .. .. ..$ Class: chr [1:4] \"1st\" \"2nd\" \"3rd\" \"Crew\"\n  .. .. ..$ Sex  : chr [1:2] \"Male\" \"Female\"\n  ..$ Adult: num [1:4, 1:2] 118 154 387 670 4 13 89 3\n  .. ..- attr(*, \"dimnames\")=List of 2\n  .. .. ..$ Class: chr [1:4] \"1st\" \"2nd\" \"3rd\" \"Crew\"\n  .. .. ..$ Sex  : chr [1:2] \"Male\" \"Female\"\n $ Yes:List of 2\n  ..$ Child: num [1:4, 1:2] 5 11 13 0 1 13 14 0\n  .. ..- attr(*, \"dimnames\")=List of 2\n  .. .. ..$ Class: chr [1:4] \"1st\" \"2nd\" \"3rd\" \"Crew\"\n  .. .. ..$ Sex  : chr [1:2] \"Male\" \"Female\"\n  ..$ Adult: num [1:4, 1:2] 57 14 75 192 140 80 76 20\n  .. ..- attr(*, \"dimnames\")=List of 2\n  .. .. ..$ Class: chr [1:4] \"1st\" \"2nd\" \"3rd\" \"Crew\"\n  .. .. ..$ Sex  : chr [1:2] \"Male\" \"Female\"\n```\n:::\n:::\n\n\nFollowing function will convert this nested array into a multi-dimensional array.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nlist2array <- function(list, dnames.name = NULL) {\n  l2a <- function(l) {\n    do.call(abind::abind, append(l, list(rev.along = 0)))\n  }\n  while (is.list(list[[1]])) {\n    list <- map(list, l2a)\n  }\n  out <- l2a(list)\n  if (!is.null(dnames.name)) names(dimnames(out)) <- dnames.name\n  return(out)\n}\n```\n:::\n\n\nNow, testing the function we just created.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nNewTitanic <- list2array(titanic_list, dnames.name = names(dimnames(Titanic)))\nstr(NewTitanic)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n num [1:4, 1:2, 1:2, 1:2] 0 0 35 0 0 0 17 0 118 154 ...\n - attr(*, \"dimnames\")=List of 4\n  ..$ Class   : chr [1:4] \"1st\" \"2nd\" \"3rd\" \"Crew\"\n  ..$ Sex     : chr [1:2] \"Male\" \"Female\"\n  ..$ Age     : chr [1:2] \"Child\" \"Adult\"\n  ..$ Survived: chr [1:2] \"No\" \"Yes\"\n```\n:::\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nidentical(Titanic, as.table(NewTitanic))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] TRUE\n```\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}